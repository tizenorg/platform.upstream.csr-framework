CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(csr-framework)

INCLUDE(FindPkgConfig)

STRING(REGEX MATCH "([^.]*)" SO_VERSION "${VERSION}")

SET(TARGET_LIB secfw)
SET(TARGET_TCS_TEST tcstest)
SET(TARGET_TWP_TEST twptest)

SET(GC_SECTIONS_FLAGS         "-fdata-sections -ffunction-sections -Wl,--gc-sections")
SET(CMAKE_C_FLAGS             "${CMAKE_C_FLAGS} ${GC_SECTIONS_FLAGS}")
SET(CMAKE_CXX_FLAGS           "${CMAKE_CXX_FLAGS} ${GC_SECTIONS_FLAGS}")
SET(CMAKE_C_FLAGS_RELEASE     "-g -O2")
SET(CMAKE_CXX_FLAGS_RELEASE   "-g -std=c++0x -O2")
SET(CMAKE_C_FLAGS_DEBUG       "-g -O0 -Wp,-U_FORTIFY_SOURCE")
SET(CMAKE_CXX_FLAGS_DEBUG     "-g -std=c++0x -O0 -Wp,-U_FORTIFY_SOURCE")
SET(CMAKE_C_FLAGS_CCOV        "-g -O2 --coverage")
SET(CMAKE_CXX_FLAGS_CCOV      "-g -std=c++0x -O2 --coverage")
SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--as-needed")
SET(CMAKE_EXE_LINKER_FLAGS    "-Wl,--as-needed")
SET(CMAKE_SKIP_RPATH          "TRUE")

ADD_DEFINITIONS("-Werror")
ADD_DEFINITIONS("-Wall")

SET(PC_LDFLAGS -l${TARGET_LIB})

CONFIGURE_FILE(${CMAKE_PROJECT_NAME}.pc.in ${CMAKE_PROJECT_NAME}.pc @ONLY)
INSTALL(FILES ${CMAKE_PROJECT_NAME}.pc DESTINATION ${LIB_INSTALL_DIR}/pkgconfig)

ADD_SUBDIRECTORY(framework)

IF (DEFINED CSR_TEST_BUILD)
ADD_SUBDIRECTORY(test)
ENDIF (DEFINED CSR_TEST_BUILD)
